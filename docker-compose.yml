version: '3.9'
services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    expose:
      - "5445"
    ports:
      - "5445:5445"
    command: -p 5445
  web:
    build: .
    volumes:
     - .:/app/
     - ./acscreen/staticfiles:/app/acscreen/staticfiles/
     - ./acscreen/static:/app/acscreen/static/
    command: >
      sh -c "
          python manage.py migrate --settings='acscreen.settings.prod' && 
          python manage.py collectstatic --settings='acscreen.settings.prod' --noinput   &&
          python -m gunicorn --env DJANGO_SETTINGS_MODULE=acscreen.settings.prod  acscreen.wsgi --bind=0.0.0.0:9500"          

    ports:
      - "9500:9500"
    environment:
      - ALLOWED_HOSTS
      - SECRET_KEY
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DB_HOST
      - DB_PORT
      - FIRST_ADMIN_USERNAME
      - FIRST_ADMIN_EMAIL
      - FIRST_ADMIN_PASSWORD
      - SQUARE_ACCESS_TOKEN
      - SQUARE_LOCATION_ID
      - SQUARE_APP_ID
      - SQUARE_ENVIRONMENT
      - QUEST_URL
      - QUEST_ACCOUNT_NUMBER
      - SITE_BASE_URL
    depends_on:
      - db

  cluster:
    build: .
    volumes:
     - .:/app/
     - ./acscreen/staticfiles:/app/acscreen/staticfiles/
     - ./acscreen/static:/app/acscreen/static/
    command: >
      sh -c "
           python manage.py qcluster --settings='acscreen.settings.prod'
             "

    environment:
      - ALLOWED_HOSTS
      - SECRET_KEY
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DB_HOST
      - DB_PORT
      - FIRST_ADMIN_USERNAME
      - FIRST_ADMIN_EMAIL
      - FIRST_ADMIN_PASSWORD
      - SQUARE_ACCESS_TOKEN
      - SQUARE_LOCATION_ID
      - SQUARE_APP_ID
      - SQUARE_ENVIRONMENT
      - QUEST_URL
      - QUEST_ACCOUNT_NUMBER
      - SITE_BASE_URL

    depends_on:
      - db
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro 
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - nginx
      