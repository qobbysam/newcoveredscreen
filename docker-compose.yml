version: '3.9'
services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    expose:
      - "5445"
    ports:
      - "5445:5445"
    command: -p 5445
  web:
    build: .
    volumes:
     - .:/app/
     - ./acscreen/staticfiles:/app/acscreen/staticfiles/
     - ./acscreen/static:/app/acscreen/static/
    command: >
      sh -c "
          python manage.py migrate --settings='acscreen.settings.prod' && 
          python manage.py collectstatic --settings='acscreen.settings.prod' --noinput   &&
          python -m gunicorn --env DJANGO_SETTINGS_MODULE=acscreen.settings.prod  acscreen.wsgi --bind=0.0.0.0:9500"          

    ports:
      - "9500:9500"
    environment:
      - ALLOWED_HOSTS
      - SECRET_KEY
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DB_HOST
      - DB_PORT
      - FIRST_ADMIN_USERNAME
      - FIRST_ADMIN_EMAIL
      - FIRST_ADMIN_PASSWORD
      - SQUARE_ACCESS_TOKEN
      - SQUARE_LOCATION_ID
      - SQUARE_APP_ID
      - SQUARE_ENVIRONMENT
      - QUEST_URL
      - QUEST_ACCOUNT_NUMBER
      - SITE_BASE_URL
    depends_on:
      - db

  cluster:
    build: .
    volumes:
     - .:/app/
     - ./acscreen/staticfiles:/app/acscreen/staticfiles/
     - ./acscreen/static:/app/acscreen/static/
    command: >
      sh -c "
           python manage.py qcluster --settings='acscreen.settings.prod'
             "

    environment:
      - ALLOWED_HOSTS
      - SECRET_KEY
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DB_HOST
      - DB_PORT
      - FIRST_ADMIN_USERNAME
      - FIRST_ADMIN_EMAIL
      - FIRST_ADMIN_PASSWORD
      - SQUARE_ACCESS_TOKEN
      - SQUARE_LOCATION_ID
      - SQUARE_APP_ID
      - SQUARE_ENVIRONMENT
      - QUEST_URL
      - QUEST_ACCOUNT_NUMBER
      - SITE_BASE_URL

    depends_on:
      - db

  nginx:
    build: ./nginx
    image: evgeniy-khyst/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      - ./html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
      